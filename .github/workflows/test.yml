name: Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  GOPRIVATE: github.com/decisiveai/opentelemetry-operator
  TOKEN: ${{ secrets.TOKEN_OPERATOR }}

jobs:
  test:
    name: Test on Ubuntu
    runs-on: ubuntu-latest
    steps:
      - name: Configure git for private modules
        run: git config --global url."https://user:${TOKEN}@github.com".insteadOf "https://github.com"

      - name: Clone the code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '~1.23'

      - name: Running Tests
        run: |
          go mod vendor
          go mod tidy
          make test-coverage

      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage
          path: coverage.txt

  comment:
    name: Comment code coverage
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'
    permissions:
      contents: read
      actions: read  # to download code coverage results from "test" job
      pull-requests: write # write permission needed to comment on PR
    steps:
      - name: Create coverage report
        uses: fgrosse/go-coverage-report@v1.1.1 # Consider using a Git revision for maximum security
        with:
          coverage-artifact-name: "code-coverage" # can be omitted if you used this default value
          coverage-file-name: "coverage.txt" # can be omitted if you used this default value
      - name: Verify report
        run: |
          ls
#      - name: Archive coverage report
#        uses: actions/upload-artifact@v4
#        with:
#          name: code-coverage-results
#          path: coverage.md # TODO: find correct file name

#      - name: Add Coverage Report to GitHub Pages
#        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
#        run: |
#          mkdir -p public
#          mv code-coverage-results.md public/
#
#      - name: Deploy Coverage Report to GitHub Pages
#        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
#        uses: peaceiris/actions-gh-pages@v4
#        with:
#          github_token: ${{ secrets.GITHUB_TOKEN }}
#          publish_dir: ./public
#          publish_branch: gh-pages