apiVersion: v1
kind: ConfigMap
metadata:
  name: watcher-collector-config
data:
  collector.yaml: |
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
    
    processors:
      batch: {}
      groupbyattrs/watcher1:
        keys:
          - service.name
      groupbyattrs/watcher2:
        keys:
          - team
          - log_level
      groupbyattrs/watcher3:
        keys:
          - region
          - log_level
      groupbyattrs/watcher4:
        keys:
          - service.name
          - team
          - region
      deltatocumulative: {}
      
      filter/severity:
        error_mode: ignore
        logs:
          log_record:
            - 'attributes["log_level"] == "INFO"'
    
    exporters:
      debug:
      prometheus:
        endpoint: 0.0.0.0:8899
        metric_expiration: 180m
        resource_to_telemetry_conversion:
          enabled: true
    
    connectors:
      datavolume/watcher1:
        label_resource_attributes:
          - service.name
        count_metric_name: mdai_watcher_one_count_total
        bytes_metric_name: mdai_watcher_one_bytes_total
      datavolume/watcher2:
        label_resource_attributes:
          - team
          - log_level
        count_metric_name: mdai_watcher_two_count_total
      datavolume/watcher3:
        label_resource_attributes:
          - region
          - log_level
        count_metric_name: mdai_watcher_three_count_total
      datavolume/watcher4:
        label_resource_attributes:
          - service.name
          - team
          - region
        count_metric_name: mdai_watcher_four_count_total
        bytes_metric_name: mdai_watcher_four_bytes_total
    
    service:
      telemetry:
        metrics:
          readers:
            - pull:
                exporter:
                  prometheus:
                    host: '0.0.0.0'
                    port: 8888
      pipelines:
        logs/watcher1:
          receivers: [otlp]
          processors: [batch, groupbyattrs/watcher1]
          exporters: [datavolume/watcher1]
        logs/watcher2:
          receivers: [otlp]
          processors: [batch, groupbyattrs/watcher2]
          exporters: [datavolume/watcher2]
        logs/watcher3:
          receivers: [otlp]
          processors: [batch, groupbyattrs/watcher3]
          exporters: [datavolume/watcher3]
        logs/watcher4:
          receivers: [otlp]
          processors: [filter/severity, batch, groupbyattrs/watcher4]
          exporters: [datavolume/watcher4]
        metrics/watcheroutput:
          receivers: [datavolume/watcher1, datavolume/watcher2, datavolume/watcher3, datavolume/watcher4]
          processors: [deltatocumulative]
          exporters: [prometheus,debug]