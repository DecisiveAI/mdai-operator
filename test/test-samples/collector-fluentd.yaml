apiVersion: opentelemetry.io/v1beta1
kind: OpenTelemetryCollector
metadata:
  labels:
    mdaihub-name: mdaihub-sample
  name: gateway-3
  namespace: mdai
spec:
  image: otel/opentelemetry-collector-contrib:0.117.0
  envFrom:
    - configMapRef:
        name: mdaihub-sample-variables
  config:
    receivers:
      fluentforward:
        endpoint: '${env:MY_POD_IP}:8006'
      otlp:
        protocols:
          grpc:
            endpoint: '${env:MY_POD_IP}:4317'
          http:
            endpoint: '${env:MY_POD_IP}:4318'
            # Since this collector needs to receive data from the web, enable cors for all origins
            # `allowed_origins` can be refined for your deployment domain
            cors:
              allowed_origins:
                - "http://*"
                - "https://*"

    extensions:
      # The health_check extension is mandatory for this chart.
      # Without the health_check extension the collector will fail the readiness and liveliness probes.
      # The health_check extension can be modified, but should never be removed.
      health_check:
        endpoint: "${env:MY_POD_IP}:13133"

    processors:
      memory_limiter:
        check_interval: 23s
        limit_percentage: 75
        spike_limit_percentage: 15

      batch:
        send_batch_size: 10000
        timeout: 13s

      groupbyattrs:
        keys:
          - service.name

      resource/watcher_receiver_tag:
        attributes:
          - key: watcher_direction
            value: "received"
            action: upsert

      resource/watcher_exporter_tag:
        attributes:
          - key: watcher_direction
            value: "exported"
            action: upsert

      filter/severity:
        error_mode: ignore
        logs:
          log_record:
            - 'attributes["log_level"] == "INFO"'

    exporters:
      debug: { }
      otlp/watcher:
        endpoint: watcher-collector-service.mdai.svc.cluster.local:4317
        tls:
          insecure: true

    service:
      telemetry:
        metrics:
          address: ":8888"
      extensions:
        - health_check
      pipelines:
        logs/customer_pipeline:
          receivers: [ otlp, fluentforward ]
          processors: [ memory_limiter, batch, groupbyattrs, resource/watcher_exporter_tag ]
          exporters: [ debug, otlp/watcher ]

        logs/watch_receivers:
          receivers: [ otlp, fluentforward ]
          processors: [ memory_limiter, batch, groupbyattrs, resource/watcher_receiver_tag ]
          exporters: [ debug, otlp/watcher ]
