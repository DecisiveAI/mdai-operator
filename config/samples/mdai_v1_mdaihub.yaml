apiVersion: hub.mydecisive.ai/v1
# Put a brief introduction
kind: MdaiHub
# Metadata section for the resource
metadata:
  labels:
    app.kubernetes.io/name: mdai-operator
    app.kubernetes.io/managed-by: kustomize
  name: mdaihub-dynamic-data-filtering-sample
  namespace: mdai
# Specification section for the MdaiHub resource
spec:
  # Variables whose values are managed by MDAI. Typical use is update by Action and converted to environment variables by the MDAI Operator.
  variables:
    - storageKey: service_list_1
      defaultValue: "n/a"
      serializeAs:
        - name: "SERVICE_LIST_REGEX"
          transformer:
            join:
              delimiter: "|"
        - name: "SERVICE_LIST_CSV"
          transformer:
            join:
              delimiter: ","
#       below properties are optional
      type: set
      storageType: "mdai-valkey"
    - storageKey: service_list_2
      defaultValue: "n/a"
      serializeAs:
        - name: "SERVICE_LIST_2_REGEX"
          transformer:
            join:
              delimiter: "|"
        - name: "SERVICE_LIST_2_CSV"
          transformer:
            join:
              delimiter: ","
      #       below properties are optional
      type: set
      storageType: "mdai-valkey"

  # Observers that watch telemetry and contribute metrics to Prometheus. Typical use is to query these metrics in Evaluations.
  observers:
    - name: watcher1
      labelResourceAttributes:
        - service.name
      countMetricName: mdai_watcher_one_count_total
      bytesMetricName: mdai_watcher_one_bytes_total
    - name: watcher2
      labelResourceAttributes:
      - team
      - log_level
      countMetricName: mdai_watcher_two_count_total
    - name: watcher3
      labelResourceAttributes:
      - region
      - log_level
      bytesMetricName: mdai_watcher_three_count_total
    - name: watcher4
      image: public.ecr.aws/p3k6k6h3/watcher-observer
      labelResourceAttributes:
      - service.name
      - team
      - region
      countMetricName: mdai_watcher_four_count_total
      bytesMetricName: mdai_watcher_four_bytes_total
      filter:
        error_mode: ignore
        logs:
          log_record:
            - 'attributes["log_level"] == "INFO"'

  # Evaluations define the conditions to check. Currently, supported Evaluations are only Prometheus Alerts.
  evaluations:
    - name: logBytesOutTooHighBySvc
      type: mdai/prometheus_alert
      expr: 'increase(mdai_log_bytes_sent_total[1h]) > 100*1024*1024'
      severity: warning
      onStatus:
        firing:
          variableUpdate:
            variableRef: service_list_1
            operation: mdai/add_element
        resolved:
          variableUpdate:
            variableRef: service_list_1
            operation: mdai/remove_element
      # Optional below here
      for: 5m
      keep_firing_for: 10m
      relevantLabels:
        - "service_name"

