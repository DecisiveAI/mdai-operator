apiVersion: hub.mydecisive.ai/v1
kind: MdaiHub
metadata:
  labels:
    app.kubernetes.io/name: mdai-operator
    app.kubernetes.io/managed-by: kustomize
  name: mdaihub-second
  namespace: mdai
spec:
  variables:
    - key: service_list
      dataType: set
      serializeAs:
        - name: "SERVICE_LIST"
          transformers:
            - type: join
              join:
                delimiter: "|"
    - key: filter
      dataType: string
      serializeAs:
        - name: "FILTER"
    - key: default
      dataType: string
      serializeAs:
        - name: "DEFAULT"
    - key: severity_number
      dataType: int
      serializeAs:
        - name: "SEVERITY_NUMBER"
    - key: any_service_alerted
      dataType: boolean
      serializeAs:
        - name: "SERVICE_ALERTED"
    - key: attribute_map
      dataType: map
      serializeAs:
        - name: "ATTRIBUTES"
    - key: severity_filters_by_level
      dataType: map
      serializeAs:
        - name: "SEVERITY_FILTERS_BY_LEVEL"
    - key: my_priority_list
      type: meta
      dataType: metaPriorityList
      variableRefs:
        - default
        - service_list
      serializeAs:
        - name: "SERVICE_PRIORITY"
          transformers:
            - type: join
              join:
                delimiter: "|"
    - key: my_hash_set
      type: meta
      dataType: metaHashSet
      variableRefs:
        - severity_number
        - severity_filters_by_level
      serializeAs:
        - name: "SERVICE_HASH_SET"

  prometheusAlert:
    - name: logBytesOutTooHighBySvc
      expr: 'increase(mdai_log_bytes_sent_total[1h]) > 100*1024*1024'
      severity: warning
      for: 5m
      keep_firing_for: 10m

  automations:
    - name: HandleAddNoisyServiceToSet
      when:
        alertName: logBytesOutTooHighBySvc
        status: firing
      then:
        - addToSet:
            set: noisyServiceList
            value: "{{ service_name }}"
        - callWebhook:
            url: "https://alerts.company.com/webhook"
            method: POST
            body:
              service: "{{ service_name }}"
              error_rate: "{{ error_rate }}"
    - name: HandleRemoveNoisyServiceFromSet
      when:
        alertName: logBytesOutTooHighBySvc
        status: resolved
      then:
        - removeFromSet:
            set: noisyServiceList
            value: "{{ service_name }}"
    - name: TrackCriticalRiskLevel
      when:
        variableUpdated: riskLevel
        condition: "variable_value == 'critical'"
      then:
        - addToSet:
            set: highRiskStates
            value: "{{ variable_value }}"