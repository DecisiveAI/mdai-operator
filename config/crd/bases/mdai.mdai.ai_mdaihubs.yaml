---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.4
  name: mdaihubs.mdai.mdai.ai
spec:
  group: mdai.mdai.ai
  names:
    kind: MdaiHub
    listKind: MdaiHubList
    plural: mdaihubs
    singular: mdaihub
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: MdaiHub is the Schema for the mdaihubs API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: MdaiHubSpec defines the desired state of MdaiHub.
            properties:
              actions:
                items:
                  properties:
                    name:
                      description: How this Action will be referred to elsewhere in
                        the config
                      type: string
                    operation:
                      description: Values depend on the type of the variable named.
                        To be expanded.
                      pattern: ^(mdai/(add|remove))$
                      type: string
                    variableName:
                      description: The name of the variable that this Action will
                        affect
                      type: string
                  required:
                  - name
                  - operation
                  - variableName
                  type: object
                type: array
              evaluations:
                items:
                  properties:
                    expr:
                      anyOf:
                      - type: integer
                      - type: string
                      description: A valid PromQL query expression
                      x-kubernetes-int-or-string: true
                    for:
                      description: Alerts are considered firing once they have been
                        returned for this long.
                      pattern: ^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$
                      type: string
                    keep_firing_for:
                      description: KeepFiringFor defines how long an alert will continue
                        firing after the condition that triggered it has cleared.
                      minLength: 1
                      pattern: ^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$
                      type: string
                    name:
                      description: How this evaluation will be referred to elsewhere
                        in the config
                      type: string
                    severity:
                      pattern: ^(warning|critical)$
                      type: string
                  required:
                  - expr
                  - name
                  - severity
                  type: object
                type: array
              eventMap:
                additionalProperties:
                  items:
                    type: string
                  type: array
                description: |-
                  EventMap Keys should be names of Triggers
                  Values should be arrays of name of Actions
                type: object
              observers:
                items:
                  properties:
                    name:
                      type: string
                  required:
                  - name
                  type: object
                type: array
              triggers:
                items:
                  properties:
                    alertStatus:
                      description: Does this evaluation kick off an action on 'firing'
                        status or 'resolved'? If omitted, the evaluation will only
                        trigger on the 'firing' status.
                      pattern: ^(firing|resolved)$
                      type: string
                    evaluationName:
                      description: The name of the evaluation that you want to key
                        off of
                      type: string
                    name:
                      description: How this Trigger will be referred to elsewhere
                        in the config
                      type: string
                    relevantLabels:
                      description: Label from the Expr indicating which value(s) the
                        alert payload will forward. Helpful for dictating downstream
                        behavior.
                      items:
                        type: string
                      type: array
                  required:
                  - evaluationName
                  - name
                  type: object
                type: array
              variables:
                items:
                  properties:
                    delimiter:
                      type: string
                    name:
                      minLength: 0
                      type: string
                    source:
                      properties:
                        type:
                          enum:
                          - valkey
                          type: string
                      required:
                      - type
                      type: object
                    type:
                      enum:
                      - scalar
                      - array
                      type: string
                  required:
                  - name
                  - source
                  - type
                  type: object
                type: array
            type: object
          status:
            description: MdaiHubStatus defines the observed state of MdaiHub.
            properties:
              conditions:
                description: Conditions store the status conditions of the Cluster
                  instances
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              hubStatus:
                description: Status of the Cluster defined by its modules and dependencies
                  statuses
                type: string
              lastUpdatedTime:
                description: |-
                  Time when last Cluster Configuration change was detected
                  Right now it's updated on each reconcile, we have to skip when reconciliation detects no changes
                format: date-time
                type: string
            required:
            - hubStatus
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
