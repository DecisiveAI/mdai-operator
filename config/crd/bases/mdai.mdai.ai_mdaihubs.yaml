---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.4
  name: mdaihubs.mdai.mdai.ai
spec:
  group: mdai.mdai.ai
  names:
    kind: MdaiHub
    listKind: MdaiHubList
    plural: mdaihubs
    singular: mdaihub
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: MdaiHub is the Schema for the mdaihubs API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: MdaiHubSpec defines the desired state of MdaiHub.
            properties:
              config:
                description: kubebuilder:validation:Optional
                properties:
                  evaluation_interval:
                    description: |-
                      Specify the interval at which all evaluations are assessed in the Prometheus infrastructure.
                      Evaluations with explicit `Interval`s will override this value
                    pattern: ^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$
                    type: string
                  reconcileLoopInterval:
                    default: 2m
                    description: Interval at which to reconcile the Cluster Configuration,
                      applied only if built-in ValKey is enabled and variables defined
                      for Valkey storage.
                    format: duration
                    type: string
                type: object
              evaluations:
                items:
                  properties:
                    expr:
                      anyOf:
                      - type: integer
                      - type: string
                      description: A valid PromQL query expression
                      x-kubernetes-int-or-string: true
                    for:
                      description: Alerts are considered firing once they have been
                        returned for this long.
                      pattern: ^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$
                      type: string
                    interval:
                      description: Specify the interval at which this evaluation is
                        assessed in the Prometheus infrastructure.
                      format: duration
                      type: string
                    keep_firing_for:
                      description: KeepFiringFor defines how long an alert will continue
                        firing after the condition that triggered it has cleared.
                      minLength: 1
                      pattern: ^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$
                      type: string
                    name:
                      description: How this evaluation will be referred to elsewhere
                        in the config
                      type: string
                    relevantLabels:
                      description: RelevantLabels indicates which part(s) of the alert
                        payload to forward to the Action.
                      items:
                        type: string
                      type: array
                    resolve:
                      description: 'Resolve is the action that''s taken when this
                        alert fires. It''s a shorthand for Status.Firing. DEPRECATED:
                        Use Status.Firing instead!'
                      properties:
                        variableUpdate:
                          properties:
                            operation:
                              enum:
                              - mdai/add_element
                              - mdai/remove_element
                              type: string
                            variableRef:
                              type: string
                          required:
                          - operation
                          - variableRef
                          type: object
                      type: object
                    severity:
                      pattern: ^(warning|critical)$
                      type: string
                    status:
                      description: |-
                        Status allows the user to specify actions depending on the state of the evaluation
                        If Resolve is not provided, Status.Firing is required
                        If both are provided, Status will override Resolve
                      properties:
                        firing:
                          properties:
                            variableUpdate:
                              properties:
                                operation:
                                  enum:
                                  - mdai/add_element
                                  - mdai/remove_element
                                  type: string
                                variableRef:
                                  type: string
                              required:
                              - operation
                              - variableRef
                              type: object
                          type: object
                        resolved:
                          properties:
                            variableUpdate:
                              properties:
                                operation:
                                  enum:
                                  - mdai/add_element
                                  - mdai/remove_element
                                  type: string
                                variableRef:
                                  type: string
                              required:
                              - operation
                              - variableRef
                              type: object
                          type: object
                      type: object
                    type:
                      enum:
                      - mdai/prometheus_alert
                      type: string
                  required:
                  - expr
                  - name
                  - severity
                  - type
                  type: object
                type: array
              observers:
                items:
                  properties:
                    bytesMetricName:
                      type: string
                    countMetricName:
                      type: string
                    filter:
                      properties:
                        error_mode:
                          type: string
                        logs:
                          properties:
                            log_record:
                              items:
                                type: string
                              type: array
                          required:
                          - log_record
                          type: object
                      type: object
                    image:
                      type: string
                    labelResourceAttributes:
                      items:
                        type: string
                      type: array
                    name:
                      type: string
                  required:
                  - labelResourceAttributes
                  - name
                  type: object
                type: array
              variables:
                items:
                  properties:
                    defaultValue:
                      type: string
                    storageKey:
                      pattern: ^[a-zA-Z_][a-zA-Z0-9_]*$
                      type: string
                    storageType:
                      default: mdai-valkey
                      description: StorageType defaults to "mdai-valkey" if not provided
                      enum:
                      - mdai-valkey
                      type: string
                    type:
                      enum:
                      - int
                      - float
                      - boolean
                      - string
                      - set
                      - array
                      type: string
                    with:
                      items:
                        properties:
                          exportedVariableName:
                            type: string
                          transformer:
                            properties:
                              join:
                                properties:
                                  delimiter:
                                    type: string
                                required:
                                - delimiter
                                type: object
                            type: object
                        type: object
                      type: array
                  required:
                  - storageKey
                  - type
                  type: object
                type: array
            type: object
          status:
            description: MdaiHubStatus defines the observed state of MdaiHub.
            properties:
              conditions:
                description: Conditions store the status conditions of the Cluster
                  instances
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              hubStatus:
                description: Status of the Cluster defined by its modules and dependencies
                  statuses
                type: string
              lastUpdatedTime:
                description: |-
                  Time when last Cluster Configuration change was detected
                  Right now it's updated on each reconcile, we have to skip when reconciliation detects no changes
                format: date-time
                type: string
            required:
            - hubStatus
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
